//
//  Canvas.swift
//  DinoGame
//
//  Created by Eshan Verma on 03/05/23.
//

import UIKit

class Canvas: UIView {

    override func draw(_ rect: CGRect) {

//        let contextControlLeftLine = UIGraphicsGetCurrentContext()
//        contextControlLeftLine?.setLineWidth(1.0)
//        contextControlLeftLine?.setStrokeColor(UIColor.blue.cgColor)
//        contextControlLeftLine?.move(to: CGPoint(x:100, y: 100))
//        context?.addLine(to: CGPoint(x: 110, y: 100))
//        context?.addLine(to: CGPoint(x: 110, y: 110))
//        context?.addLine(to: CGPoint(x: 100, y: 110))
//        contextControlLeftLine?.addLine(to: CGPoint(x: 100, y: 400))
//        contextControlLeftLine?.strokePath()

//        let contextControlRightLine = UIGraphicsGetCurrentContext()
//        contextControlRightLine?.setLineWidth(1.0)
//        contextControlRightLine?.setStrokeColor(UIColor.blue.cgColor)
//        contextControlRightLine?.move(to: CGPoint(x:300, y: 100))
//        context?.addLine(to: CGPoint(x: 110, y: 100))
//        context?.addLine(to: CGPoint(x: 110, y: 110))
//        context?.addLine(to: CGPoint(x: 100, y: 110))
//        contextControlRightLine?.addLine(to: CGPoint(x: 300, y: 400))
//        contextControlRightLine?.strokePath()
        
        let context = UIGraphicsGetCurrentContext()
        context?.setLineWidth(1.0)
        context?.setStrokeColor(UIColor.black.cgColor)
        context?.move(to: CGPoint(x:100, y: 170))
        context?.addLine(to: CGPoint(x: 110, y: 170))
        context?.addLine(to: CGPoint(x: 110, y: 190))
        context?.addLine(to: CGPoint(x: 120, y: 190))
        context?.addLine(to: CGPoint(x: 120, y: 200))
        context?.addLine(to: CGPoint(x: 120, y: 200))
        context?.addLine(to: CGPoint(x: 130, y: 200))
        context?.addLine(to: CGPoint(x: 130, y: 210))
        context?.addLine(to: CGPoint(x: 150, y: 210))
        context?.addLine(to: CGPoint(x: 150, y: 200))
        context?.addLine(to: CGPoint(x: 160, y: 200))
        context?.addLine(to: CGPoint(x: 160, y: 190))
        context?.addLine(to: CGPoint(x: 170, y: 190))
        context?.addLine(to: CGPoint(x: 170, y: 180))
        context?.addLine(to: CGPoint(x: 190, y: 180))
        context?.addLine(to: CGPoint(x: 190, y: 170))
        context?.addLine(to: CGPoint(x: 200, y: 170))
        context?.addLine(to: CGPoint(x: 200, y: 110))
        context?.addLine(to: CGPoint(x: 210, y: 110))
        context?.addLine(to: CGPoint(x: 210, y: 100))
        context?.addLine(to: CGPoint(x: 290, y: 100))
        context?.addLine(to: CGPoint(x: 290, y: 110))
        context?.addLine(to: CGPoint(x: 300, y: 110))
        context?.addLine(to: CGPoint(x: 300, y: 160))
        context?.addLine(to: CGPoint(x: 250, y: 160))
        context?.addLine(to: CGPoint(x: 250, y: 170))
        context?.addLine(to: CGPoint(x: 280, y: 170))
        context?.addLine(to: CGPoint(x: 280, y: 180))
        context?.addLine(to: CGPoint(x: 240, y: 180))
        context?.addLine(to: CGPoint(x: 240, y: 200))
        context?.addLine(to: CGPoint(x: 260, y: 200))
        context?.addLine(to: CGPoint(x: 260, y: 220))
        context?.addLine(to: CGPoint(x: 250, y: 220))
        context?.addLine(to: CGPoint(x: 250, y: 210))
        context?.addLine(to: CGPoint(x: 240, y: 210))
        context?.addLine(to: CGPoint(x: 240, y: 240))
        context?.addLine(to: CGPoint(x: 230, y: 240))
        context?.addLine(to: CGPoint(x: 230, y: 260))
        context?.addLine(to: CGPoint(x: 220, y: 260))
        context?.addLine(to: CGPoint(x: 220, y: 270))
        context?.addLine(to: CGPoint(x: 210, y: 270))
        context?.addLine(to: CGPoint(x: 210, y: 300))
        context?.addLine(to: CGPoint(x: 220, y: 300))
        context?.addLine(to: CGPoint(x: 220, y: 310))
        context?.addLine(to: CGPoint(x: 200, y: 310))
        context?.addLine(to: CGPoint(x: 200, y: 290))
        context?.addLine(to: CGPoint(x: 190, y: 290))
        context?.addLine(to: CGPoint(x: 190, y: 280))
        context?.addLine(to: CGPoint(x: 180, y: 280))
        context?.addLine(to: CGPoint(x: 180, y: 290))
        context?.addLine(to: CGPoint(x: 160, y: 290))
        context?.addLine(to: CGPoint(x: 160, y: 300))
        context?.addLine(to: CGPoint(x: 170, y: 300))
        context?.addLine(to: CGPoint(x: 170, y: 310))
        context?.addLine(to: CGPoint(x: 150, y: 310))
        context?.addLine(to: CGPoint(x: 150, y: 280))
        context?.addLine(to: CGPoint(x: 140, y: 280))
        context?.addLine(to: CGPoint(x: 140, y: 270))
        context?.addLine(to: CGPoint(x: 130, y: 270))
        context?.addLine(to: CGPoint(x: 130, y: 260))
        context?.addLine(to: CGPoint(x: 120, y: 260))
        context?.addLine(to: CGPoint(x: 120, y: 250))
        context?.addLine(to: CGPoint(x: 110, y: 250))
        context?.addLine(to: CGPoint(x: 110, y: 240))
        context?.addLine(to: CGPoint(x: 100, y: 240))
        context?.addLine(to: CGPoint(x: 100, y: 170))
        context?.setFillColor(UIColor.systemGray.cgColor)
        context?.setStrokeColor(UIColor.gray.cgColor)
        context!.drawPath(using: .fillStroke)
        
        let contextDinoEye = UIGraphicsGetCurrentContext()
        contextDinoEye?.setLineWidth(1.0)
        contextDinoEye?.setStrokeColor(UIColor.blue.cgColor)
        contextDinoEye?.move(to: CGPoint(x:230, y: 120))
        contextDinoEye?.addLine(to: CGPoint(x: 240, y: 120))
        contextDinoEye?.addLine(to: CGPoint(x: 240, y: 130))
        contextDinoEye?.addLine(to: CGPoint(x: 230, y: 130))
        contextDinoEye?.addLine(to: CGPoint(x: 230, y: 120))
        contextDinoEye?.setFillColor(UIColor.white.cgColor)
        contextDinoEye?.setStrokeColor(UIColor.gray.cgColor)
        contextDinoEye!.drawPath(using: .fillStroke)
        
    }

}
